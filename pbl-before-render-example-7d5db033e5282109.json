[{"parent":"BeforeRenderExample","file":"before-render.component.ts","title":"Before Render","lang":"typescript","source":"import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { BeforeRenderEventHandler } from '@pebula/nform';\n\nimport { Hero } from './model';\n\nexport function getSuperPowersAsync(): Promise<Array<{ labe?: string; value: string; }>> {\n  return new Promise( r => setTimeout(r, 1000 ))\n    .then( () => {\n      return [\n        { value: 'atomicVision', label: 'Atomic Vision' },\n        { value: 'teleportation', label: 'Teleportation' },\n        { value: 'physicalRestoration', label: 'Physical Restoration' },\n        { value: 'timeTravel', label: 'Time Travel' },\n        { value: 'mindReading', label: 'Mind Reading' }\n      ];\n    });\n}\n\n@Component({\n  selector: 'pbl-before-render-example',\n  templateUrl: './before-render.component.html',\n  styleUrls: ['./before-render.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BeforeRenderExample {\n  model = new Hero();\n\n  beforeRender($event: BeforeRenderEventHandler): void {\n\n    const bmi = $event.records['bmi'];\n    if (bmi) {\n      bmi.vType = 'number';\n    }\n\n    const superPower = $event.records['superPower'];\n    if (superPower) {\n      // ASYNC CALLS THAT BLOCK THE WHOLE FORM FROM RENDERING, GOOD FOR GETTING DATA FROM REMOTE SERVER.\n      // E.G.: GETTING GROUPS LISTED UNDER A USER, ETC...\n      const p = getSuperPowersAsync().then(newPowers => {\n        const existingPowers = superPower.getData('options') || [];\n        existingPowers.push(...newPowers);\n        superPower.mergeData({ options: existingPowers });\n      });\n      // mark this field as async, no render until promise completes.\n      $event.async(p);\n    }\n  }\n\n}\n","contents":"<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ChangeDetectionStrategy<span class=\"token punctuation\">,</span> Component<span class=\"token punctuation\">,</span> ViewEncapsulation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BeforeRenderEventHandler <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/nform'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Hero <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./model'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getSuperPowersAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> labe<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span> r <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'atomicVision'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Atomic Vision'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'teleportation'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Teleportation'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'physicalRestoration'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Physical Restoration'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'timeTravel'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Time Travel'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'mindReading'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Mind Reading'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token operator\">:</span> <span class=\"token string\">'pbl-before-render-example'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token operator\">:</span> <span class=\"token string\">'./before-render.component.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./before-render.component.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  encapsulation<span class=\"token operator\">:</span> ViewEncapsulation<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">,</span>\n  changeDetection<span class=\"token operator\">:</span> ChangeDetectionStrategy<span class=\"token punctuation\">.</span>OnPush<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BeforeRenderExample</span> <span class=\"token punctuation\">{</span>\n  model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">beforeRender</span><span class=\"token punctuation\">(</span>$event<span class=\"token operator\">:</span> BeforeRenderEventHandler<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">const</span> bmi <span class=\"token operator\">=</span> $event<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">[</span><span class=\"token string\">'bmi'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bmi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      bmi<span class=\"token punctuation\">.</span>vType <span class=\"token operator\">=</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> superPower <span class=\"token operator\">=</span> $event<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">[</span><span class=\"token string\">'superPower'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>superPower<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ASYNC CALLS THAT BLOCK THE WHOLE FORM FROM RENDERING, GOOD FOR GETTING DATA FROM REMOTE SERVER.</span>\n      <span class=\"token comment\">// E.G.: GETTING GROUPS LISTED UNDER A USER, ETC...</span>\n      <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token function\">getSuperPowersAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>newPowers <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> existingPowers <span class=\"token operator\">=</span> superPower<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'options'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        existingPowers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>newPowers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        superPower<span class=\"token punctuation\">.</span><span class=\"token function\">mergeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> options<span class=\"token operator\">:</span> existingPowers <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// mark this field as async, no render until promise completes.</span>\n      $event<span class=\"token punctuation\">.</span><span class=\"token function\">async</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"},{"parent":"BeforeRenderExample","file":"./before-render.component.html","title":"./before-render.component.html","lang":"html","source":"<pbl-nform [model]=\"model\" (beforeRender)=\"beforeRender($event)\"></pbl-nform>\n","contents":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pbl-nform</span> <span class=\"token attr-name\">[model]</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>model<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">(beforeRender)</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>beforeRender($event)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pbl-nform</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>"},{"parent":"","file":"model.ts","title":"model.ts","lang":"typescript","source":"import { FormModel, FormProp } from '@pebula/nform';\n\n@FormModel()\nexport class Hero {\n  @FormProp({\n    vType: 'number',\n    label: 'Hero ID'\n  })\n  id: number;\n\n  @FormProp({\n    required: true,\n    vType: 'text',\n    label: 'Hero Name'\n  })\n  name: string;\n\n  @FormProp({\n    vType: 'date',\n    label: 'Hero Birth'\n  })\n  birth: string;\n\n  @FormProp({\n    vType: 'boolean',\n    label: 'Has Tracking Device'\n  })\n  hasTracking: boolean;\n\n  @FormProp({\n    vType: 'slideToggle',\n    label: 'Double Agent'\n  })\n  doubleAgent: boolean;\n\n  @FormProp({\n    vType: 'slider',\n    label: 'BMI Index',\n    data: { min: 1, max: 35 }\n  })\n  bmi: number;\n\n  @FormProp({\n    vType: 'select',\n    label: 'Super Power',\n    data: {\n      multiple: true,\n      options: [\n        { value: 'selfHealing', label: 'Self Healing' },\n        { value: 'flying', label: 'Flying' },\n      ]\n    }\n  })\n  superPower: 'selfHealing' | 'flying' | 'cloaking' | 'cloning' | 'invisibility';\n\n  @FormProp({\n    forceObjectType: true,\n    vType: 'select',\n    label: 'Hobbies',\n    data: {\n      multiple: true,\n      options: [\n        'Baseball',\n        'Basketball',\n        'Buildi',\n        'Cosplay',\n        'Soccer',\n        'Spelunkering',\n        'Storm Chasing',\n        'Wrestling',\n        'Writing',\n        'Yoga'\n      ].map( value => ({value})),\n    }\n  })\n  hobbies: Array<'selfHealing' | 'flying' | 'cloaking' | 'cloning' | 'invisibility'>;\n\n  @FormProp({\n    forceObjectType: true,\n    vType: 'chips',\n    label: 'Chips',\n    data: {\n      removable: true,\n      addOnBlur: true,\n    }\n  })\n  chips: string[];\n\n  @FormProp({\n    required: true,\n    vType: 'textarea',\n    label: 'Bio',\n    data: {\n      autoSize: false,\n      minRows: 3,\n      maxRows: 5\n    }\n  })\n  bio: string;\n}\n","contents":"<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormModel<span class=\"token punctuation\">,</span> FormProp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/nform'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormModel</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hero</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Hero ID'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Hero Name'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Hero Birth'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  birth<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'boolean'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Has Tracking Device'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  hasTracking<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'slideToggle'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Double Agent'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  doubleAgent<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'slider'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'BMI Index'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> min<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">:</span> <span class=\"token number\">35</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  bmi<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'select'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Super Power'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      multiple<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'selfHealing'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Self Healing'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">'flying'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Flying'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  superPower<span class=\"token operator\">:</span> <span class=\"token string\">'selfHealing'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'flying'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cloaking'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cloning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'invisibility'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    forceObjectType<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'select'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Hobbies'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      multiple<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'Baseball'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Basketball'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Buildi'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Cosplay'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Soccer'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Spelunkering'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Storm Chasing'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Wrestling'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Writing'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Yoga'</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> value <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  hobbies<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token string\">'selfHealing'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'flying'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cloaking'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'cloning'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'invisibility'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    forceObjectType<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'chips'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Chips'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      removable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      addOnBlur<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  chips<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    vType<span class=\"token operator\">:</span> <span class=\"token string\">'textarea'</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token operator\">:</span> <span class=\"token string\">'Bio'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      autoSize<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      minRows<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n      maxRows<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  bio<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}]