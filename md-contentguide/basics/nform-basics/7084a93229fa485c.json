{"id":"guide/basics/nform-basics","title":"nForm Basics","contents":"<h1 id=\"nform-basics\"><a href=\"#nform-basics\" aria-hidden><span class=\"icon icon-link\"></span></a>nForm Basics</h1>\n<p><strong>nForm</strong> is dynamic form library that creates forms based on pre-defined <strong>models</strong> (schemas).</p>\n<p>A model is a <strong>class</strong> with additional <strong>metadata</strong>:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormModel<span class=\"token punctuation\">,</span> FormProp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@pebula/nform'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormModel</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hero</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> vType<span class=\"token operator\">:</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Hero Name'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">FormProp</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> vType<span class=\"token operator\">:</span> <span class=\"token string\">'boolean'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">:</span> <span class=\"token string\">'Super Hero'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  superHero<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>The additional <strong>metadata</strong> is provided using the decorators and it contains information that <strong>nform</strong> use to render the form.</p>\n<p>To render the form all we need to do is to provide an instance of the class to the form:</p>\n<div><div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  template<span class=\"token operator\">:</span> <span class=\"token string\">'&lt;pbl-nform [model]=\"model\">&lt;/pbl-nform>'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token punctuation\">{</span>\n  model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></div>\n<p>At this point, the <code class=\"language-text\">Hero</code> instance is linked (bound) to <code class=\"language-text\">nform</code> but it's a <strong>cold link</strong>.</p>\n<ul>\n<li>Changing values on the UI form controls will not propagate to the <code class=\"language-text\">Hero</code> instance.</li>\n<li>Changing values on the <code class=\"language-text\">Hero</code> instance will not propagate to the form and UI controls</li>\n</ul>\n<p>To update the <code class=\"language-text\">Hero</code> instance with the current form value we need to <strong>commit</strong>.<br>\nTo update the form with the current values from the <code class=\"language-text\">Hero</code> instance we need to <strong>sync</strong>.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n It is also possible to \n<strong>hot link</strong>\n the instance so UI updates to the form controls will immediately \n<strong>commit</strong>\n to the \n<code class=\"language-text\">Hero</code>\n instance.\n</blockquote>\n<p>Here's an example with a <strong>commit</strong> and initial value set on the <code class=\"language-text\">Hero</code> instance <strong>before</strong> it is sent to <code class=\"language-text\">nform</code></p>\n<div pbl-example-view=\"pbl-nform-basics-example\"></div>\n<p>On the left (<strong>A</strong>) we can see the rendered form, containing 2 form controls and a <strong>commit</strong> button.<br>\nOn the right we can see the live values of the <code class=\"language-text\">Hero</code> class instance (<strong>B</strong>) and just below, the raw value of the underlying form used by <strong>nForm</strong>, <code class=\"language-text\">FormGroup</code> (<strong>C</strong>).</p>\n<p>Try playing with the form on the left (<strong>A</strong>), every time you change a value it will immediately update the raw form value (<strong>C</strong>).<br>\nTo update the <code class=\"language-text\">Hero</code> class instance (<strong>B</strong>) you must first click the <code class=\"language-text\">COMMIT</code> button.</p>\n<blockquote class=\"info icon\">\n<div class=\"icon-location\"></div>\n Notice how the \n<code class=\"language-text\">Hero Name</code>\n is pre-defined, this is because we provided a \n<code class=\"language-text\">Hero</code>\n instance with that value set.\n</blockquote>\n"}